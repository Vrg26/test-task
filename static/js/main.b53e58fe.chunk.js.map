{"version":3,"sources":["Theme/Themes.js","Theme/ThemeContext.js","components/ThemeSwitcher/ThemeSwitcher.js","components/Header/Header.js","components/Calendar/Calendar.js","components/CalendarList/CalendarList.js","components/Info/bg.png","components/Info/Info.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Themes","dark","color","backgroundColor","light","ThemeContext","React","createContext","theme","toggleTheme","ThemeSwitcher","useState","lightTheme","toggleLightTheme","useContext","className","onChange","event","target","checked","value","type","Header","style","creatorDays","inactiveDaysCounter","activeDaysCounter","_","index","Calendar","props","borderColor","month","Array","fill","map","CalendarList","selectedMonth","setSelectedMonth","onClick","classList","contains","textContent","Info","src","bg","alt","App","setTheme","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b53e58fe.chunk.js","sourcesContent":["const Themes = {\r\n  dark: {\r\n      color: '#ebf5ff',\r\n      backgroundColor: '#2c3649',\r\n  },\r\n  light: {\r\n      color: '#404040',\r\n      backgroundColor: '#FFF',\r\n  }\r\n};\r\nexport default Themes;","import React from 'react';\r\nimport Themes from \"./Themes\";\r\n\r\nconst ThemeContext = React.createContext(\r\n    {\r\n        theme: Themes.dark,\r\n        toggleTheme: () => {}\r\n    });\r\nexport default ThemeContext;","import React, { useContext, useState } from 'react';\r\nimport './ThemeSwitcher.css';\r\nimport {ThemeContext} from \"../../Theme\";\r\n\r\nconst ThemeSwitcher = () => {\r\n\r\n    const [lightTheme, toggleLightTheme] = useState(false);\r\n    const { toggleTheme } = useContext(ThemeContext);\r\n\r\n    const onChangeTheme = (event) => {\r\n        toggleTheme(event.target.checked);\r\n        toggleLightTheme(event.target.checked);\r\n    }\r\n\r\n    return (\r\n        <label className=\"theme-switcher\">\r\n            <input onChange={ onChangeTheme }\r\n                   value={lightTheme}\r\n                   type=\"checkbox\"\r\n                   className=\"theme-switcher__input visually-hidden\"/>\r\n            <div className=\"theme-switcher__box\">\r\n                <div className=\"theme-switcher__box-toggle\"> </div>\r\n            </div>\r\n        </label>\r\n    );\r\n}\r\nexport default ThemeSwitcher;","import React, { useContext } from 'react';\r\n\r\nimport './Header.css';\r\nimport { ThemeSwitcher } from \"../ThemeSwitcher\";\r\nimport { ThemeContext } from \"../../Theme\";\r\n\r\nconst Header = () => {\r\n    const { theme } = useContext(ThemeContext);\r\n    return (\r\n        <header style={theme} className=\"header\">\r\n            <h1 className=\"header__title\">Тестовое задание</h1>\r\n            <ThemeSwitcher/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header","import React, { useContext } from 'react';\r\n\r\nimport './Calendar.css'\r\nimport {ThemeContext} from \"../../Theme\";\r\n\r\n\r\nconst creatorDays = (color) => {\r\n    let inactiveDaysCounter = 22;\r\n    let activeDaysCounter = 1\r\n    return (_, index) => {\r\n        if(index < 7){\r\n            return  <div key={index} style={({color: 'rgba(204,204,204,0.6)'})} className=\"calendar__day\">{ inactiveDaysCounter++ }</div>\r\n        }\r\n        if(activeDaysCounter> 31) activeDaysCounter = 1;\r\n        return <div key={index} style={ 38 > index ? ({color}):({color: 'rgba(204,204,204,0.6)'}) } className=\"calendar__day\">{ activeDaysCounter++ }</div>\r\n    }\r\n}\r\n\r\nconst Calendar = (props) => {\r\n    const { theme } = useContext(ThemeContext);\r\n\r\n    return (\r\n        <div style={ theme } className=\"calendar\">\r\n            <div className=\"calendar__header\">\r\n                <button className=\"calendar__year-picker calendar__year-picker_less calendar__button\">\r\n                    <div style={( { borderColor: theme.color} )} className=\"calendar__button-content\"> </div>\r\n                    <div style={( { borderColor: theme.color} )} className=\"calendar__button-content\"> </div>\r\n                </button>\r\n                <button className=\"calendar__month-picker calendar__month-picker_less calendar__button\">\r\n                    <div style={( { borderColor: theme.color} )} className=\"calendar__button-content\"> </div>\r\n                </button>\r\n                <p className=\"calendar__date-info\">\r\n                    {props.month} <span className=\"calendar__year\">2021</span>\r\n                </p>\r\n\r\n                <button className=\"calendar__month-picker calendar__month-picker_more calendar__button\">\r\n                    <div style={( { borderColor: theme.color} )} className=\"calendar__button-content\"> </div>\r\n                </button>\r\n                <button className=\"calendar__year-picker calendar__year-picker_more calendar__button\">\r\n                    <div style={( { borderColor: theme.color} )} className=\"calendar__button-content\"> </div>\r\n                    <div style={( { borderColor: theme.color} )} className=\"calendar__button-content\"> </div>\r\n                </button>\r\n            </div>\r\n        <div className=\"calendar__body\">\r\n            <ul className=\"calendar__week-day-list\">\r\n                <li className=\"calendar__week-day-item\">пн</li>\r\n                <li className=\"calendar__week-day-item\">вт</li>\r\n                <li className=\"calendar__week-day-item\">ср</li>\r\n                <li className=\"calendar__week-day-item\">чт</li>\r\n                <li className=\"calendar__week-day-item\">пт</li>\r\n                <li className=\"calendar__week-day-item\">сб</li>\r\n                <li className=\"calendar__week-day-item\">вс</li>\r\n            </ul>\r\n            <ul className=\"calendar__days\">\r\n                {Array(42).fill(0).map(creatorDays(theme.color))}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Calendar;","import React, { useContext, useState } from 'react';\r\n\r\nimport './CalendarList.css';\r\nimport {Calendar} from \"../Calendar\";\r\nimport {ThemeContext} from \"../../Theme\";\r\n\r\nconst CalendarList = () => {\r\n\r\n    const { theme } = useContext(ThemeContext);\r\n    const [selectedMonth, setSelectedMonth] = useState('Март');\r\n\r\n    const onSelectMonth = (event) => {\r\n        if(event.target.classList.contains('date-container__control')){\r\n            setSelectedMonth(event.target.textContent);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section style={ theme } className=\"date-container\">\r\n            <div className=\"data-container__calendars\">\r\n                <Calendar month={selectedMonth} />\r\n                <Calendar month={selectedMonth} />\r\n                <Calendar month={selectedMonth} />\r\n            </div>\r\n            <ul className=\"date-container__controls\" onClick={onSelectMonth}>\r\n                <li style={({borderColor: theme.color})} className=\"date-container__control\">Март</li>\r\n                <li style={({borderColor: theme.color})} className=\"date-container__control\">Апрель</li>\r\n                <li style={({borderColor: theme.color})} className=\"date-container__control\">Май</li>\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CalendarList;","export default __webpack_public_path__ + \"static/media/bg.469375a2.png\";","import React from 'react';\r\n\r\nimport './Info.css'\r\nimport bg from './bg.png';\r\n\r\nconst Info = () => {\r\n    return (\r\n        <section className=\"info\">\r\n            <img className=\"info__image\" src={ bg } alt=\"\"/>\r\n                <div className=\"info__text-container\">\r\n                    <h2 className=\"info__title\">Заголовок</h2>\r\n                    <p className=\"info__text\">Платформа управления геопространственными\r\n                        данными «Геопаспорт» — это инновационный продукт, представляющий собой набор программных решений\r\n                        и позволяющий создавать современное прикладное программное обеспечение в области управления\r\n                        данными территории или региона.\r\n                    </p>\r\n                    <p className=\"info__text\">Программа включена в единый реестр российских программ для ЭВМ и баз\r\n                        данных.</p>\r\n                </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Info","import React, { useState } from 'react'\nimport './App.css';\nimport {Header} from \"../Header\";\nimport {CalendarList} from \"../CalendarList\";\nimport {Info} from \"../Info\";\nimport { ThemeContext, Themes } from '../../Theme';\n\nfunction App() {\n\n  const [theme, setTheme] = useState(Themes.light);\n\n  const toggleTheme = (value) => value ?\n                            setTheme(Themes.dark)\n                            : setTheme(Themes.light)\n\n  return (\n      <ThemeContext.Provider value={({theme, toggleTheme})}>\n          <div style={theme} className=\"App\">\n              <Header/>\n              <CalendarList/>\n              <Info/>\n          </div>\n      </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}